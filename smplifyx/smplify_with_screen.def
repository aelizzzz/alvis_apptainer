# Use cuda container from nvcr.io is the current only solution to make pyrender work.
# Note this container should be used with screen, currently is done by Thinlinc to Alvis.
Bootstrap: docker
From: nvcr.io/nvidia/cuda:11.7.1-devel-ubuntu20.04
%post
export TORCH_CUDA_ARCH_LIST="3.5;5.0;6.0;6.1;7.0;7.5;8.0;8.6+PTX"
apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        build-essential cmake git wget vim ffmpeg software-properties-common \
        python3-setuptools python3-dev python3-pip python3-tk cython \
        libx264-dev sudo pkg-config libyaml-dev libopencv-dev \
        libgoogle-glog-dev libboost-all-dev libhdf5-dev libatlas-base-dev \
        libopencv-dev protobuf-compiler libgoogle-glog-dev libboost-all-dev \
        libhdf5-dev libatlas-base-dev libprotobuf-dev zip unzip file ninja-build p7zip-full p7zip-rar \
        freeglut3 freeglut3-dev libegl1

# Pyrender, no need to install mesa
mkdir  /workspace
cd /workspace
pip install torch==1.13.0+cu117 torchvision==0.14.0+cu117 torchaudio==0.13.0 --extra-index-url https://download.pytorch.org/whl/cu117
git clone https://github.com/mmatl/pyopengl.git
pip install ./pyopengl


# Fix helper_math.h not found error
cd /workspace
git clone https://github.com/NVIDIA/cuda-samples.git
export CUDA_SAMPLES_INC=/workspace/cuda-samples/Common/
# Install torch-mesh-isect
git clone https://github.com/vchoutas/torch-mesh-isect
cd torch-mesh-isect
mv include/double_vec_ops.h src/
sed -i '1i#ifndef AT_CHECK\n#define AT_CHECK TORCH_CHECK\n#endif\n' /workspace/torch-mesh-isect/src/bvh.cpp
pip install -r requirements.txt && python3 setup.py install
# Install smplx
cd /workspace
pip install smplx[all]
git clone https://github.com/vchoutas/smplx && cd smplx && python3 setup.py install
# Install human_body_prior
cd /workspace
git clone https://github.com/nghorbani/human_body_prior.git
cd human_body_prior && git checkout cvpr19
pip install scikit-build
# comment out pytorch version check
sed -i 's/torch==1.1.0/torch>=1.1.0/g' /workspace/human_body_prior/setup.py
pip install opencv-python==4.5.5.64
python3 setup.py develop
python3 setup.py install
# Install smplify-x
cd /workspace
git clone https://github.com/vchoutas/smplify-x.git
cd smplify-x
wget https://owncloud.tuebingen.mpg.de/index.php/s/MWnr8Kso4K8T8at/download/smplx_parts_segm.pkl
pip install trimesh
pip install pyrender
# Download the SMPLX model
wget -O models_smplx_v1_1.zip https://kth-my.sharepoint.com/:u:/g/personal/qyuan_ug_kth_se/Ed80j693XelDlu_Re0Pgm9UBjSTfhnjKaZ9gtT3pp58LUA?Download=1
unzip models_smplx_v1_1.zip
# Prepare data folder for rendering
mkdir -p data/images
mkdir -p data/keypoints

pip install dataclasses configargparse pyyaml tqdm

# Download Vposer
cd /workspace
wget -O vposer_V1_0.zip https://kth-my.sharepoint.com/:u:/g/personal/qyuan_ug_kth_se/EcSSDMGKiVpAjlIIhvIOa30B0wGuM01JJl68hdJAQw1STw?Download=1
unzip vposer_V1_0.zip


# Fix mask issue
#comment out line 302-304
sed -i '302,304s/^/#/' /usr/local/lib/python3.8/dist-packages/torchgeometry-0.1.2-py3.8.egg/torchgeometry/core/conversions.py
# add line 305-307 https://github.com/vchoutas/smplify-x/issues/191
sed -i '305i\    mask_c1 = mask_d2 * ~(mask_d0_d1)' /usr/local/lib/python3.8/dist-packages/torchgeometry-0.1.2-py3.8.egg/torchgeometry/core/conversions.py
sed -i '306i\    mask_c2 = ~(mask_d2) * mask_d0_nd1' /usr/local/lib/python3.8/dist-packages/torchgeometry-0.1.2-py3.8.egg/torchgeometry/core/conversions.py
sed -i '307i\    mask_c3 = ~(mask_d2) * ~(mask_d0_nd1)' /usr/local/lib/python3.8/dist-packages/torchgeometry-0.1.2-py3.8.egg/torchgeometry/core/conversions.py
%environment
    export PATH=$PATH:/usr/local/bin
    export CUDA_SAMPLES_INC=/workspace/cuda-samples/Common/